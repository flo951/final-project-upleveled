generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model events {
  id        Int        @id @default(autoincrement())
  eventname String     @db.VarChar(30)
  imageurl  String?    @db.VarChar(120)
  user_id   Int?
  users     users?     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  expenses  expenses[]
  people    people[]
}

model expenses {
  id          Int     @id @default(autoincrement())
  expensename String  @db.VarChar(30)
  cost        Int?
  event_id    Int?
  paymaster   Int?
  events      events? @relation(fields: [event_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  people      people? @relation(fields: [paymaster], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model people {
  id       Int        @id @default(autoincrement())
  name     String     @db.VarChar(30)
  event_id Int?
  user_id  Int?
  expenses expenses[]
  events   events?    @relation(fields: [event_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users    users?     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model sessions {
  id               Int      @id @default(autoincrement())
  token            String   @unique @db.VarChar(90)
  expiry_timestamp DateTime @default(dbgenerated("(now() + '24:00:00'::interval)")) @db.Timestamp(6)
  user_id          Int?
  users            users?   @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model users {
  id            Int        @id @default(autoincrement())
  username      String     @unique @db.VarChar(30)
  password_hash String     @db.VarChar(60)
  events        events[]
  people        people[]
  sessions      sessions[]
}
